- name: Add chrome repository
  yum_repository:
    name: google-chrome
    description: google chrome repo
    baseurl: http://dl.google.com/linux/chrome/rpm/stable/x86_64
    enabled: yes
    gpgcheck: yes
    gpgkey: https://dl-ssl.google.com/linux/linux_signing_key.pub

- name: Install packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - postgresql-server
    - postgresql-contrib
    - postgresql-devel
    - git
    - ruby
    - ruby-devel
    - nodejs
    - mlocate
    - python-psycopg2
    - rubygem-execjs
    - patch
    - bison
    - bzip2
    - gcc-c++
    - libffi-devel
    - readline-devel
    - sqlite-devel
    - chromedriver
    - google-chrome-stable

- name: Upgrade all packages
  yum:
    name: '*'
    state: latest

- name: Add user {{ username }}
  user:
    name: "{{ username }}"
    shell: /bin/bash

- name: Import rvm public key
  shell: "curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import -"

- name: Install rvm
  shell: "curl -L get.rvm.io | bash -s stable"

- name: Install {{ ruby_version }} version of ruby
  shell: "bash -l -c 'rvm use {{ ruby_version }} --install --default'"


### POSTGRESQL ###

- set_fact:
    skb: "{{ 99999999 | random | to_uuid | b64encode | lower }}"
  run_once: yes

- debug:
    msg: "{{ skb }}"

- name: Add SECRET_KEY_BASE
  lineinfile:
    path: ~/.bashrc
    regexp: '^export SECRET_KEY_BASE='
    line: "export SECRET_KEY_BASE={{ skb }}"

- name: Check that postgresql is initialized
  stat:
    path: "/var/lib/pgsql/data/PG_VERSION"
  register: pgdata_dir_version

- name: Initialize postgresql
  command: "postgresql-setup initdb"
  when: not pgdata_dir_version.stat.exists

- name: Modify pg_hba.conf
  replace:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: '^host(.*)ident'
    replace: 'host\1md5'

- name: Start and enable postgresql
  systemd:
    state: started
    name: postgresql
    enabled: yes

- name: Create user for postgresql
  postgresql_user:
    name: "{{ username }}"
    role_attr_flags: CREATEDB,CREATEROLE
  become_user: postgres
  become: true
  
- name: Create db {{ username }}
  postgresql_db:
    name: "{{ username }}"
    owner: "{{ username }}"
  become_user: postgres
  become: true

- name: Create db {{ username }}_development
  postgresql_db:
    name: "{{ username }}_development"
    owner: "{{ username }}"
  become_user: postgres
  become: true

#- name: Create db {{ username }}_test
#  postgresql_db:
#    name: "{{ username }}_test"
#    owner: "{{ username }}"
#  become_user: postgres
#  become: true

#- name: Create db {{ username }}_production
#  postgresql_db:
#    name: "{{ username }}_production"
#    owner: "{{ username }}"
#  become_user: postgres
#  become: true


### GIT ###

- name: Retrieve {{ username }} project from git
  git:
    repo: "{{ github }}"
    dest: "~/code"
    force: yes


- name: Init {{ username }} project
  script: init.sh
  args:
    chdir: "~/code/{{ username }}"

